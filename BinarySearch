// LC#34: https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        
        auto it1 = lower_bound(nums.begin(), nums.end(), target);
        auto it2 = upper_bound(nums.begin(), nums.end(), target);
        int start  = -1;
        int end= -1;
        start = it1-nums.begin();
        end = it2-nums.begin();
       
        vector<int> ans; 
        if (nums.size() == 0)
        {
            ans.push_back(-1);
            ans.push_back(-1);
            return ans;
        }
        if (nums[start]!=target) 
        {
            start = -1;
        }
        if  ((end < nums.size()) && (nums[end-1]!=target))
        {
            end = -1;
        }
        
        int end_index = (end<0)? end: end -1;
        ans.push_back(start);
        ans.push_back(end_index);
        
        return ans;
    }
};
